<Window x:Class="TrieWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TrieWpf"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Trie - Struktur" Height="909" Width="1800" WindowStartupLocation="CenterScreen">
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Datei">
                <MenuItem Header="_Öffnen" Command="{Binding ÖffnenCommand}"/>
                <MenuItem Header="_Zuletzt geöffnet" ItemsSource="{Binding MRUMenuItems,Mode=OneWay}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Path=ShortName}" />
                            <Setter Property="ToolTip" Value="{Binding Path=FileName}" />
                            <Setter Property="Command" Value="{Binding Path=OpenCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding Path=OpenParameter}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <!--<MenuItem Header="_Speichern" Command="{Binding SpeichernCommand}"/>-->
                <Separator />
                <MenuItem Header="_Verlassen" Command="{Binding VerlassenCommand}"/>
            </MenuItem>
        </Menu>
        <ToolBar Height="26" DockPanel.Dock="Top">
            <ToolBar.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Resources>
            <Button Command="{Binding ÖffnenCommand}" UseLayoutRounding="True" ToolTip="Datei öffnen" >
                <Image Source="Images/OpenfileDialog_16x.png" UseLayoutRounding="True" Stretch="None" />
            </Button>
            <!--
            <Button Command="{Binding ZuletztGeöffnetCommand}" UseLayoutRounding="True" ToolTip="Zuletzt geöffnet...">
                <Image Source="Images/OpenRecent_16x.png" Height="16" Width="16" Stretch="Fill" UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Button>
            -->
            <Menu Background="#00000000" Width="26"  >
                <MenuItem Background="#00000000" ItemsSource="{Binding MRUMenuItems,Mode=OneWay}" Height="22" Margin="0" ToolTip="Zuletzt geöffnet..">
                    <MenuItem.Icon>
                        <Image Source="Images/OpenRecent_16x.1.png" Stretch="None" UseLayoutRounding="True" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <!--
                            <TextBlock Text="Zuletzt geöffnet.."/>
                            -->
                            <!--
                            <Image Source="/MyApp.Application;component/Resources/arrow_down_simple.png" Height="10" Margin="2,0,0,0"/>
                            -->
                        </StackPanel>
                    </MenuItem.Header>

                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Path=ShortName}" />
                            <Setter Property="ToolTip" Value="{Binding Path=FileName}" />
                            <Setter Property="Command" Value="{Binding Path=OpenCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding Path=OpenParameter}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </Menu>
            <!--<Button Command="{Binding SpeichernCommand}" UseLayoutRounding="True" ToolTip="Datei speichern" >
                <Image Source="Images/Save.png" Height="16"/>
            </Button>-->
            <Separator/>
        </ToolBar>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding TextFilePath}" />
            </StatusBarItem>
            <Separator Grid.Column="2" />
            <StatusBarItem Grid.Column="3">
                <ProgressBar Minimum="0" Maximum="100" Name="pbStatus" IsIndeterminate="True" />
            </StatusBarItem>
        </StatusBar>
        <Border BorderBrush="LightGray" BorderThickness="2" Margin="2" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <TextBox Grid.Row="0" Grid.Column="0"
                        Text="{Binding Path=Text, Mode=OneWay}"
                             IsReadOnly="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        TextWrapping="Wrap"
                        AcceptsReturn="True"
				        FontFamily="Consolas"
				        FontSize="10pt">
                    </TextBox>
                    <GridSplitter Grid.Row="1" 
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              ShowsPreview="True"
                              ResizeDirection="Rows"
                              Height="5" Background="LightGray" />
                    <TextBox Grid.Row="2" Grid.Column="0" Name="outputPanel" Text="{Binding Path=OutputText, Mode=OneWay}" TextWrapping="Wrap" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="0,1,0,-1" />
                </Grid>
                <GridSplitter Grid.Column="1" 
                  HorizontalAlignment="Right" 
                  VerticalAlignment="Stretch" 
                  ResizeBehavior="PreviousAndNext"
                  Width="3" Background="LightGray"/>
                <Grid Grid.Column="2" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="6*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <TreeView Name="TrieTreeView" Grid.Row="0" ItemsSource="{Binding TrieTree}"  >
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectedItemChanged">
                                <b:InvokeCommandAction Command="{Binding TrieTreeSelectedItemChangedCommand}" CommandParameter="{Binding ElementName=TrieTreeView, Path=SelectedItem}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="local:TrieTreeItem" ItemsSource="{Binding Children}">
                                <TextBlock Foreground="{Binding TreeItemForeground}" Text="{Binding NameToShow}">
                                </TextBlock>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                    <GridSplitter Grid.Row="1" 
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              ShowsPreview="True"
                              ResizeDirection="Rows"
                              Height="5" Background="LightGray" />
                    <ListView Grid.Row="2" x:Name ="FoundListView" ItemsSource="{Binding Path=FoundListItems}">
                        <ListView.Resources>
                            <Style x:Key="hcs" TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
                            </Style>
                        </ListView.Resources>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding FoundListSelectedItemChangedCommand}" CommandParameter="{Binding ElementName=FoundListView, Path=SelectedItem}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <ListView.View>
                            <GridView x:Name ="FoundGridView">
                                <GridViewColumn Header="Position" Width="Auto" HeaderContainerStyle="{StaticResource hcs}" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Position}" MouseLeftButtonDown="ListViewDblClick" ></TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="SurroundingText" Width="Auto" HeaderContainerStyle="{StaticResource hcs}" DisplayMemberBinding="{Binding SurroundingText}" >
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </Grid>
        </Border>
    </DockPanel>
</Window>
